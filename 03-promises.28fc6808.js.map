{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBAGxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAI,C,SAAEH,E,MAAUC,IAEhBG,EAAI,C,SAAEJ,E,MAAUC,MAEjBA,MAXaP,SAASC,cAAc,yBAe/Ba,iBAAiB,SAE7B,SAAqBC,GACnBA,EAAEC,iBAEF,IAAIC,EAAaC,OAAOhB,EAAQiB,OAC5BC,EAAYF,OAAOf,EAAOgB,OAC1BE,EAASH,OAAOd,EAASe,OAE7B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCjB,EAAciB,EAAGF,GACdG,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACrBiB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,UAE3DoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MACtBiB,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBtB,QAAeC,UAE3Da,GAAaH,EAGflB,EAAO8B","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form')\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nconst btnSubmitEl = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      };\n    }, delay);\n  });\n};\n\nbtnSubmitEl.addEventListener('click', onBtnSubmit);\n\nfunction onBtnSubmit(e) {\n  e.preventDefault();\n\n  let firstDelay = Number(delayEl.value);\n  let delayStep = Number(stepEl.value);\n  let amount = Number(amountEl.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayStep)\n      .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n      .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    delayStep += firstDelay\n  }\n\n  formEl.reset();\n};"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.28fc6808.js.map"}